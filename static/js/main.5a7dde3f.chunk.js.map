{"version":3,"sources":["assets/rocket.png","component/TextField.js","pages/SignUp.js","pages/Login.js","pages/Dashboard.js","pages/userprofile.js","App.js","reportWebVitals.js","index.js"],"names":["TextField","label","props","useField","field","meta","className","htmlFor","name","touched","error","autoComplete","component","SignUp","history","useHistory","validate","Yup","fullName","matches","required","contactNmber","min","max","gender","email","password","initialValues","validationSchema","onSubmit","values","alert","JSON","stringify","push","validateOnBlur","formik","type","role","value","to","src","rocketImg","alt","Login","Dashboard","useState","data","getData","useEffect","axios","get","then","response","class","scope","map","info","style","cursor","onClick","contact_number","Userprofile","setData","width","fontSize","marginTop","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a7dde3f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/rocket.4bf2b4a8.png\";","import React from 'react';\nimport { ErrorMessage, useField } from 'formik';\n\nexport const TextField = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div className=\"mb-2\">\n      <label htmlFor={field.name}>{label}</label>\n      <input\n        className={`form-control shadow-none ${meta.touched && meta.error && 'is-invalid'}`}\n        {...field} {...props}\n        autoComplete=\"off\"\n      />\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\n    </div>\n  )\n}\n","import React from 'react';\r\n\r\nimport { Formik, Form ,Field,ErrorMessage} from 'formik';\r\nimport rocketImg from '../assets/rocket.png'\r\nimport { TextField } from '../component/TextField';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nconst SignUp = () => {\r\n    let history = useHistory();\r\n    const validate = Yup.object({\r\n        fullName: Yup.string()\r\n          .matches(/^[aA-zZ\\s]+$/, 'Only alpabet and space are allowed')\r\n          .required('Required'),\r\n        contactNmber: Yup.string()\r\n        .matches(/^[0-9]+$/, \"Must be only digits\")\r\n        .min(10, 'Enter valid number')\r\n        .max(10, 'Enter valid number')\r\n        .required('Contact Number required'),\r\n        gender: Yup.string()\r\n            .required('Gender required'),\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 charaters')\r\n          .required('Password is required'),\r\n      })\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            fullName: '',\r\n                            contactNmber: '',\r\n                            email: '',\r\n                            password: '',\r\n                            gender: ''\r\n                        }}\r\n                        validationSchema={validate}\r\n                        onSubmit={values => {\r\n                            alert(\"User Registered \\r\\n\"+JSON.stringify(values))\r\n                            history.push('/login')\r\n                        }}\r\n                        validateOnBlur={false}\r\n                    >\r\n                        {formik => (\r\n                            <div>\r\n                                <h1 className=\"my-4 font-weight-bold .display-4\">Sign Up</h1>\r\n                                <Form>\r\n                                    <TextField label=\"First Name\" name=\"fullName\" type=\"text\" />\r\n                                    <TextField label=\"Contact Number\" name=\"contactNmber\" type=\"text\" />\r\n                                    <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                                    <div className=\"mb-2\">Gender</div>\r\n                                    <div role=\"group\" aria-labelledby=\"my-radio-group\">\r\n                                        <label>\r\n                                            <Field type=\"radio\" name=\"gender\" value=\"Male\" />\r\n                                            Male\r\n                                        </label>\r\n                                        <label>\r\n                                            <Field type=\"radio\" name=\"gender\" value=\"Female\"  />\r\n                                            Female\r\n                                        </label>\r\n                                        <ErrorMessage component=\"div\" name=\"gender\" className=\"error\" />\r\n                                    </div>\r\n                                    <TextField label=\"password\" name=\"password\" type=\"password\" />\r\n                                    <button className=\"btn btn-dark mt-3\" type=\"submit\">Register</button>\r\n                                </Form>\r\n                                <div className=\"float-right\">if already registerd? <Link to=\"/login\">Login</Link></div>\r\n                            </div>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </div>\r\n                <div className=\"col-md-7 my-auto\">\r\n                    <img className=\"img-fluid w-100\" src={rocketImg} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react';\r\n\r\nimport { Formik, Form ,Field,ErrorMessage} from 'formik';\r\nimport rocketImg from '../assets/rocket.png'\r\nimport { TextField } from '../component/TextField';\r\nimport * as Yup from 'yup';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nconst Login = () => {\r\n    let history = useHistory();\r\n    const validate = Yup.object({\r\n        email: Yup.string()\r\n          .email('Email is invalid')\r\n          .required('Email is required'),\r\n        password: Yup.string()\r\n          .min(6, 'Password must be at least 6 charaters')\r\n          .required('Password is required'),\r\n      })\r\n\r\n    return (\r\n        <div className=\"container mt-3\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-5\">\r\n                    <Formik\r\n                        initialValues={{\r\n                            email:\"\",\r\n                            password : \"\"\r\n                        }}\r\n                        validationSchema={validate}\r\n                        onSubmit={values => {\r\n                            alert(\"User Login Success \\r\\n\"+JSON.stringify(values))\r\n                            history.push('/dashboard')\r\n                        }}\r\n                        validateOnBlur={false}\r\n                    >\r\n                        {formik => (\r\n                            <div>\r\n                                <h1 className=\"my-4 font-weight-bold .display-4\">Login</h1>\r\n                                <Form>\r\n                                    <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                                    <TextField label=\"password\" name=\"password\" type=\"password\" />\r\n                                    <button className=\"btn btn-dark mt-3\" type=\"submit\">Login</button>\r\n                                </Form>\r\n                                <div className=\"float-right\">if don't have account? <Link to=\"/signup\">Sign Up</Link></div>\r\n                            </div>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </div>\r\n                <div className=\"col-md-7 my-auto\">\r\n                    <img className=\"img-fluid w-100\" src={rocketImg} alt=\"\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Dashboard = () => {\r\n    let history = useHistory()\r\n    let [data, getData] = useState([])\r\n    useEffect(() => {\r\n        axios.get('https://raw.githubusercontent.com/bhanushalimahesh3/mock-api/main/users.json')\r\n            .then((response) => {\r\n                getData(response.data)\r\n            })\r\n    }, [])\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n            <h1 className=\"my-4 font-weight-bold .display-4\">Dashboard</h1>\r\n            <table class=\"table\">\r\n                <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Number</th>\r\n                        <th scope=\"col\">Gender</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((info)=>{\r\n                        return(\r\n                            <tr style={{cursor:\"pointer\"}} onClick={()=>{\r\n                                history.push('/userprofile')\r\n                            }} >\r\n                                <td>{info.name}</td>\r\n                                <td>{info.email}</td>\r\n                                <td>{info.contact_number}</td>\r\n                                <td>{info.gender}</td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import axios from 'axios';\r\nimport React, { useState,useEffect } from 'react'\r\n\r\nconst Userprofile = () => {\r\n    let [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        axios.get('https://raw.githubusercontent.com/bhanushalimahesh3/mock-api/main/user-profile.json')\r\n            .then((response) => {\r\n                setData(response.data)\r\n            })\r\n    }, [])\r\n    return (\r\n        <div className=\"container\">  \r\n        <center>\r\n        <h1>User Profile</h1>\r\n            <table class=\"table\" style={{width:\"40%\",fontSize:\"30px\",marginTop:\"100px\"}}>\r\n                \r\n                <tbody>\r\n                    <tr>\r\n                        <td>Name</td>\r\n                        <td>{data.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Email</td>\r\n                        <td>{data.email}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td >Contact Number</td>\r\n                        <td>{data.contact_number}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Gender</td>\r\n                        <td>{data.gender}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </center>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Userprofile\r\n","import './App.css';\nimport SignUp from './pages/SignUp';\nimport {HashRouter as Router,Switch,Route}from \"react-router-dom\"\nimport Login from './pages/Login';\nimport Dashboard from './pages/Dashboard';\nimport Userprofile from './pages/userprofile';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Login} exact={true} />\n        <Route path=\"/signup\" component={SignUp} exact={true} />\n        <Route path=\"/dashboard\" component={Dashboard} exact={true} />\n        <Route path=\"/userprofile\" component={Userprofile} exact={true} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}